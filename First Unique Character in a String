Problem Description : 
/*
s = "leetcode"
return 0.

s = "loveleetcode",
return 2.
*/


Code:
class Solution {
public:
    int firstUniqChar(string s) {
        map<char, pair<int , int>> m;
        for(int i=0;i<s.length();i++){
            if(m.find(s[i]) != m.end()){
            pair<int, int> x = m[s[i]];
            m[s[i]]  = make_pair(i,x.second+1);
                
            }else{
                m[s[i]] = make_pair(i,1);
            }
        }
        map<char, pair<int, int>> :: iterator itr;
        int minValue = INT_MAX;
        for(itr = m.begin() ; itr != m.end() ; itr++){
            pair<int, int> x = itr->second;
           if(x.second == 1){
               if(minValue>x.first)
                   minValue = x.first;
           }
        }
        return (minValue == INT_MAX)?-1:minValue;
        
    }
};
